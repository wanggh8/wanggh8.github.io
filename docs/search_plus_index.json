{"./":{"url":"./","title":"Introduction","keywords":"","body":" Introduction Introduction "},"macOS/":{"url":"macOS/","title":"macOS","keywords":"","body":" Introduction Introduction "},"macOS/App-Sandbox.html":{"url":"macOS/App-Sandbox.html","title":"App Sandbox","keywords":"","body":" macOS App Sandbox 沙盒机制 macOS App Sandbox 沙盒机制 "},"macOS/NSViewController.html":{"url":"macOS/NSViewController.html","title":"NSViewController","keywords":"","body":" macOS NSViewController macOS NSViewController 在 macOS 10.10 及更高版本中，NSViewController 使用初始化方法 [[MyViewController alloc] init] 时，调用 loadView 将加载与 NSViewController 同名的 Nib 文件，将 Nib 文件实例化视图连接到视图控制器的视图属性。如果不存在 Nib 文件，会触发运行时崩溃： -[NSNib _initWithNibNamed:bundle:options:] could not load the nibName: NSViewController in bundle (null). "},"Git/":{"url":"Git/","title":"Git","keywords":"","body":" Introduction Introduction "},"Git/Git-Manual.html":{"url":"Git/Git-Manual.html","title":"Git Manual","summary":"Git Manual","keywords":"","body":" Git Manual1. Git 简介2. 本地基本使用2.1. 更新 Git 缓存2.2. 分支与标签3. 远程仓库 Git Manual 1. Git 简介 Git 是目前世界上最先进的分布式版本控制系统。SVN 是集中式版本控制系统，版本库是集中放在中央服务器的。Git是分布式版本控制系统，那么它就没有中央服务器的，每个人的电脑就是一个完整的版本库。Git 配置用户标识： $ git config --global user.name \"Gh.Wang\" $ git config --global user.email \"1299927852@qq.com\" 2. 本地基本使用 选择一个空目录，路径最好不包含中文，然后使用 git init 可以把这个目录变成Git可以管理的仓库，只会可以用 git add 命令将文件添加到仓库暂存区中，然后可以用 git commit 提交到版本库分支中 $ git add readme.txt $ git commit -m \"wrote a readme file\" 之后可以使用给git status 查看结果，当前是否有新的更改以及更改是否提交，如果被修改了可以用git diff查看文件修改前后的不同，选择是否要保留更改。如果选择放弃更改使用命令git checkout -- file可以丢弃工作区的修改，同时命令git reset HEAD 可以把暂存区的修改撤销掉，重新放回工作区。git log命令可以显示从最近到最远的提交日志，可以加上--pretty=oneline让信息在一行显示。之后进行版本回退有两种 方式 用HEAD表示当前版本，也就是最新的提交版本，上一个版本就是HEAD^，上上一个版本就是HEAD^^，以此类推，如果较多可以用HEAD~n，然后使用命令$ git reset --hard HEAD^回退。 直接使用$ git reset --hard 加上版本号，一般输入版本号的前几位就可以了。 在版本回溯中，git使用指针，将指针头指向真正应用的版本，当需要更改的时候只需要移动指针就可以了。 如果要删除某个文件的话就直接使用rm命令,不过此时并没有在版本库中删除，如果确实要从版本库中删除需要使用 $ git rm test.txt $ git commit -m \"remove test.txt\" 如果误删，则可以使用git checkout -- test.txt恢复到最新版本。 2.1. 更新 Git 缓存 更新缓存 git rm -r --cached . 2.2. 分支与标签 创建并切换分支:$ git checkout -b name 查看当前分支:git branch 切换分支:git checkout name 合并指定分支到当前分支:git merge 删除分支:git branch -d 新建一个标签:git tag 指定标签信息:git tag -a -m \"blablabla...\" 查看所有标签:git tag 3. 远程仓库 首先需要创建SSH Key，使用命令： $ ssh-keygen -t rsa -C \"1299927852@qq.com\" 可以在用户目录下看到.ssh目录，目录中有id_rsa和id_rsa.pub两个文件，其中第一个是私钥，第二个是公钥，我们一般用的就是公钥。在github的setting的ssh keys界面加入自己的公钥，之后电脑就可以往github上推送了。 添加远程库，使github上的远程库与本地库同步，使用命令： $ git remote add origin git@gitee.com:wanggh8/resume.git 第一次可以使用git push -u origin master命令，实际上是把当前分支master推送到远程。之后可以直接使用命令git push origin master 从远程库克隆时，使用git pull git@gitee.com:wanggh8/resume.git 使用码云时大部分只需要将github替换成gitee就可以了，可以同时关联两个远程库，但名字应该不同。 "},"Git/Git-LFS.html":{"url":"Git/Git-LFS.html","title":"Git LFS","summary":"Git LFS","keywords":"","body":"1. 使用目的2. 安装2.1. Linux2.2. Mac2.3. Windows3. 使用Git LFS 是 Github 开发的一个 Git 的扩展，用于实现 Git 对大文件的支持 1. 使用目的 在游戏开发过程中,设计资源占用了很大一部分空间. 像 png、psd 等文件是二进制 (blob) 的,体积也很庞大。但 git 的 diff/patch 等是基于文件行的。对于二进制文件来说， git 需要存储每次 commit 的改动。每次当二进制文件修改，发生变化的时候. 都会产生额外的提交量，导致 clone 和 pull 的数据量大增，在线仓库的体积也会迅速增长。 LFS (Large File Storage) 就是为了解决这一问题而产生的工具。它将你所标记的大文件保存至另外的仓库，而在主仓库仅保留其轻量级指针。那么在你检出版本时，根据指针的变化情况下更新对应的大文件，而不是在本地保存所有版本的大文件。 2. 安装 注意：安装 Git LFS 需要 Git 的版本不低于 1.8.5 2.1. Linux curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash ` sudo apt-get install git-lfs git lfs install 2.2. Mac brew install git-lfs git lfs install 2.3. Windows 下载安装 windows installer 运行 windows installer 在命令行执行 git lfs install 3. 使用 执行 git lfs install 开启lfs功能 使用 git lfs track 命令进行大文件追踪 例如 git lfs track \"*.png\" 追踪所有后缀为 png 的文件 使用 git lfs track 查看现有的文件追踪模式 提交代码需要将 .gitattributes 文件提交至仓库. 它保存了文件的追踪记录 提交后运行 git lfs ls-files 可以显示当前跟踪的文件列表 将代码 push 到远程仓库后，LFS 跟踪的文件会以『Git LFS』的形式显示: clone 时 使用 git clone 或 git lfs clone 均可 "},"Mac/":{"url":"Mac/","title":"Mac","keywords":"","body":" Introduction Introduction "},"Mac/Mac终端zsh忽略大小写.html":{"url":"Mac/Mac终端zsh忽略大小写.html","title":"Mac终端zsh忽略大小写","summary":"Mac终端zsh忽略大小写","keywords":"","body":"Mac 终端默认是大小写不敏感的，cd desktop 其实也能切到桌面，但是无法通过tab补全。 如果你已经使用了zsh，那么一般情况下，修改.inputrc 并没有效果。 在.zshrc 里添加下面两个命令并重启后可以忽略大小写。 # Ignore lower upper autoload -Uz compinit && compinit -u zstyle ':completion:*' matcher-list 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*' "},"Mac/Mac键盘快捷键.html":{"url":"Mac/Mac键盘快捷键.html","title":"Mac键盘快捷键","summary":"Xcode使用总结","keywords":"","body":"1.1. 键盘按键使用符合1.2. 剪切、拷贝、粘贴和其他常用快捷键1.3. 睡眠、退出登录和关机快捷键1.4. 访达和系统快捷键1.5. 文稿快捷键1.6. Mac 的启动组合键1.7. Mac 上的“聚焦”键盘快捷键1.8. Mac 上 Safari 浏览器中的键盘快捷键和手势1.1. 键盘按键使用符合 修饰键 符号 Command Shift Option Control Return Delete 向前删除键 上箭头键 下箭头键 左箭头键 右箭头键 Page Up Page Down Top (Home) End 右制表符 左制表符 Escape (Esc) 1.2. 剪切、拷贝、粘贴和其他常用快捷键 Command-X：剪切所选项并拷贝到剪贴板。 Command-C：将所选项拷贝到剪贴板。这同样适用于“访达”中的文件。 Command-V：将剪贴板的内容粘贴到当前文稿或 App 中。这同样适用于“访达”中的文件。 Command-Z：撤销上一个命令。随后您可以按 Shift-Command-Z 来重做，从而反向执行撤销命令。在某些 App 中，您可以撤销和重做多个命令。 Command-A：全选各项。 Command-F：查找文稿中的项目或打开“查找”窗口。 Command-G：再次查找：查找之前所找到项目出现的下一个位置。要查找出现的上一个位置，请按 Shift-Command-G。 Command-H：隐藏最前面的 App 的窗口。要查看最前面的 App 但隐藏所有其他 App，请按 Option-Command-H。 Command-M：将最前面的窗口最小化至“程序坞”。要最小化最前面的 App 的所有窗口，请按 Option-Command-M。 Command-O：打开所选项，或打开一个对话框以选择要打开的文件。 Command-P：打印当前文稿。 Command-S：存储当前文稿。 Command-T：打开新标签页。 Command-W：关闭最前面的窗口。要关闭 App 的所有窗口，请按下 Option-Command-W。 Option-Command-Esc：强制退出 App。 Command–空格键：显示或隐藏“聚焦”搜索栏。要从“访达”窗口执行“聚焦”搜索，请按 Command–Option–空格键。（如果您使用多个输入源以便用不同的语言键入内容，这些快捷键会更改输入源而非显示“聚焦”。了解如何更改冲突的键盘快捷键。） Control-Command–空格键：显示字符检视器，您可以从中选择表情符号和其他符号。 Control-Command-F：全屏使用 App（如果 App 支持）。 空格键：使用快速查看来预览所选项。 Command-Tab：在打开的 App 中切换到下一个最近使用的 App。 Shift-Command-5：在 macOS Mojave 或更高版本中，拍摄截屏或录制屏幕。也可以使用 Shift-Command-3 或 Shift-Command-4 来拍摄截屏。进一步了解截屏。 Shift-Command-N：在“访达”中创建一个新文件夹。 Command-逗号 (,)：打开最前面的 App 的偏好设置。 1.3. 睡眠、退出登录和关机快捷键 在这些快捷键中，您可能需要按住其中一些快捷键稍长时间。这样有助于避免无意中启用快捷键。 电源按钮：按下可将 Mac 开机或将 Mac 从睡眠状态唤醒。按住这个按钮 1.5 秒可使 Mac 进入睡眠状态。*继续按住则会强制您的 Mac 关机。 Option–Command–电源按钮*或 Option–Command–Media Eject（Option–Command–介质推出键）：将您的 Mac 置于睡眠状态。 Control–Shift–电源按钮*或 Control–Shift–Media Eject（Control–Shift–介质推出键）：将显示器置于睡眠状态。 Control–电源按钮* 或 Control–介质推出键 ：显示一个对话框，询问您是要重新启动、睡眠还是关机。 Control–Command–电源按钮*：强制 Mac 重新启动，系统不会提示是否要存储任何打开且未存储的文稿。 Control–Command–Media Eject（Control–Command–介质推出键）：退出所有 App，然后重新启动您的Mac。如果任何打开的文稿有未存储的更改，系统会询问您是否要存储这些更改。 Control–Option–Command–电源按钮* 或 Control–Option–Command–介质推出键 ：退出所有 App，然后将您的 Mac 关机。如果任何打开的文稿有未存储的更改，系统会询问您是否要存储这些更改。 Control-Command-Q：立即锁定屏幕。 Shift–Command–Q：退出登录您的 macOS 用户帐户。系统将提示您确认。要在不确认的情况下立即退出登录，请按下 Option-Shift-Command-Q。 1.4. 访达和系统快捷键 Command-D：复制所选文件。 Command-E：推出所选磁盘或宗卷。 Command-F：在“访达”窗口中开始“聚焦”搜索。 Command-I：显示所选文件的“显示简介”窗口。 Command-R：(1) 如果在“访达”中选择了某个别名：显示所选别名对应的原始文件。(2) 在某些 App（如“日历”或 Safari 浏览器）中，刷新或重新载入页面。(3) 在“软件更新”偏好设置中，再次检查有没有软件更新。 Shift-Command-C：打开“电脑”窗口。 Shift-Command-D：打开“桌面”文件夹。 Shift-Command-F：打开“最近使用”窗口，其中显示了您最近查看或更改过的所有文件。 Shift-Command-G：打开“前往文件夹”窗口。 Shift-Command-H：打开当前 macOS 用户帐户的个人文件夹。 Shift-Command-I：打开 iCloud 云盘。 Shift-Command-K：打开“网络”窗口。 Option-Command-L：打开“下载”文件夹。 Shift-Command-N：新建文件夹。 Shift-Command-O：打开“文稿”文件夹。 Shift-Command-P：在“访达”窗口中显示或隐藏预览面板。 Shift-Command-R：打开“隔空投送”窗口。 Shift-Command-T：显示或隐藏“访达”窗口中的标签页栏。 Ctrl-Shift-Command-T：将所选的“访达”项目添加到“程序坞”（OS X Mavericks 或更高版本） Shift-Command-U：打开“实用工具”文件夹。 Option-Command-D：显示或隐藏“程序坞”。 Control-Command-T：将所选项添加到边栏（OS X Mavericks 或更高版本）。 Option-Command-P：隐藏或显示“访达”窗口中的路径栏。 Option-Command-S：隐藏或显示“访达”窗口中的边栏。 Command–斜线 (/)：隐藏或显示“访达”窗口中的状态栏。 Command-J：显示“显示”选项。 Command-K：打开“连接服务器”窗口。 Command-L：为所选项制作替身。 Command-N：打开一个新的“访达”窗口。 Option-Command-N：新建智能文件夹。 Command-T：在当前“访达”窗口中有单个标签页开着的状态下显示或隐藏标签页栏。 Option-Command-T：在当前“访达”窗口中有单个标签页开着的状态下显示或隐藏工具栏。 Option-Command-V：移动：将剪贴板中的文件从原始位置移动到当前位置。 Command-Y：使用“快速查看”预览所选文件。 Option-Command-Y：显示所选文件的快速查看幻灯片显示。 Command-1：以图标方式显示“访达”窗口中的项目。 Command-2：以列表方式显示“访达”窗口中的项目。 Command-3：以分栏方式显示“访达”窗口中的项目。 Command-4：以画廊方式显示“访达”窗口中的项目。 Command–左中括号 ([)：前往上一文件夹。 Command–右中括号 (])：前往下一个文件夹。 Command–上箭头：打开包含当前文件夹的文件夹。 Command–Control–上箭头：在新窗口中打开包含当前文件夹的文件夹。 Command–下箭头：打开所选项。 右箭头：打开所选文件夹。这个快捷键仅在列表视图中有效。 左箭头：关闭所选文件夹。这个快捷键仅在列表视图中有效。 Command-Delete：将所选项移到废纸篓。 Shift-Command-Delete：清倒废纸篓。 Option-Shift-Command-Delete：清倒废纸篓而不显示确认对话框。 Command–调高亮度：打开或关闭目标显示器模式。 Command–调低亮度：当您的 Mac 连接到多台显示器时，打开或关闭视频镜像。 Option–调高亮度：打开“显示器”偏好设置。这个快捷键可与任一亮度键搭配使用。 Control–调高亮度或 Control–调低亮度：更改外部显示器的亮度（如果显示器支持）。 Option-Shift–调高亮度或 Option-Shift–调低亮度：以较小的步幅调节显示器亮度。如果您的显示器支持，可以将 Control 键添加到此快捷键，以便在外置显示器上进行调节。 Option–“调度中心”：打开“调度中心”偏好设置。 Command–调度中心：显示桌面。 Control–下箭头：显示最前面的 App 的所有窗口。 Option–调高音量：打开“声音”偏好设置。这个快捷键可与任一音量键搭配使用。 Option-Shift–调高音量或 Option-Shift–调低音量：以较小的步幅调节音量。 Option–键盘调高亮度：打开“键盘”偏好设置。这个快捷键可与任一键盘亮度键搭配使用。 Option-Shift–键盘调高亮度或 Option-Shift–键盘调低亮度：以较小的步幅调节键盘亮度。 连按 Option 键：在单独的窗口中打开项目，然后关闭原始窗口。 连按 Command 键：在单独的标签页或窗口中打开文件夹。 按住 Command 键拖移到另一个宗卷：将拖移的项目移到另一个宗卷，而不是拷贝它。 按住 Option 键拖移：拷贝托移的项目。拖移项目时指针会随之变化。 拖移时按住 Option-Command：为拖移的项目制作替身。拖移项目时指针会随之变化。 按住 Option 键点按开合三角：打开所选文件夹内的所有文件夹。这个快捷键仅在列表视图中有效。 按住 Command 键点按窗口标题：查看包含当前文件夹的文件夹。 了解如何使用 Command 或 Shift 在“访达”中选择多个项目。 点按“访达”菜单栏中的“前往”菜单查看用于打开许多常用文件夹（如“应用程序”、“文稿”、“下载”、“实用工具”和“iCloud 云盘”）的快捷键。 1.5. 文稿快捷键 这些快捷键的行为可能因您使用的 App 而异。 Command-B：以粗体显示所选文本，或者打开或关闭粗体显示功能。 Command-I：以斜体显示所选文本，或者打开或关闭斜体显示功能。 Command-K：添加网页链接。 Command-U：对所选文本加下划线，或者打开或关闭加下划线功能。 Command-T：显示或隐藏“字体”窗口。 Command-D：从“打开”对话框或“存储”对话框内选择“桌面”文件夹。 Control-Command-D：显示或隐藏所选字词的定义。 Shift-Command–冒号 (:)：显示“拼写和语法”窗口。 Command–分号 (;)：查找文稿中拼写错误的字词。 Option-Delete：删除插入点左边的字词。 Control-H：删除插入点左边的字符。也可以使用 Delete 键。 Control-D：删除插入点右边的字符。也可以使用 Fn-Delete。 Fn-Delete：在没有向前删除 键的键盘上向前删除。也可以使用 Control-D。 Control-K：删除插入点与行或段落末尾处之间的文本。 Fn–上箭头：Page Up：向上滚动一页。 Fn–下箭头：Page Down：向下滚动一页。 Fn–左箭头：Home：滚动到文稿开头。 Fn–右箭头：End：滚动到文稿末尾。 Command–上箭头：将插入点移至文稿开头。 Command–下箭头：将插入点移至文稿末尾。 Command–左箭头：将插入点移至当前行的行首。 Command–右箭头：将插入点移至当前行的行尾。 Option–左箭头：将插入点移至上一字词的词首。 Option–右箭头：将插入点移至下一字词的词尾。 Shift-Command–上箭头：选中插入点与文稿开头之间的文本。 Shift-Command–下箭头：选中插入点与文稿末尾之间的文本。 Shift-Command–左箭头：选中插入点与当前行行首之间的文本。 Shift-Command–右箭头：选中插入点与当前行行尾之间的文本。 Shift–上箭头：将文本选择范围扩展到上一行相同水平位置的最近字符处。 Shift–下箭头：将文本选择范围扩展到下一行相同水平位置的最近字符处。 Shift–左箭头：将文本选择范围向左扩展一个字符。 Shift–右箭头：将文本选择范围向右扩展一个字符。 Option–Shift–上箭头：将文本选择范围扩展到当前段落的段首，再按一次则扩展到下一段落的段首。 Option–Shift–下箭头：将文本选择范围扩展到当前段落的段尾，再按一次则扩展到下一段落的段尾。 Option–Shift–左箭头：将文本选择范围扩展到当前字词的词首，再按一次则扩展到后一字词的词首。 Option–Shift–左箭头：将文本选择范围扩展到当前字词的词尾，再按一次则扩展到后一字词的词尾。 Control–A：移至行或段落的开头。 Control–E：移至行或段落的末尾。 Control–F：向前移动一个字符。 Control–B：向后移动一个字符。 Control–L：将光标或所选内容置于可见区域中央。 Control–P：上移一行。 Control–N：下移一行。 Control–O：在插入点后新插入一行。 Control–T：将插入点后面的字符与插入点前面的字符交换。 Command–左花括号 ({)：左对齐。 Command–右花括号 (})：右对齐。 Shift-Command–竖线 (|)：居中对齐。 Option-Command-F：前往搜索栏。 Option-Command-T：显示或隐藏 App 中的工具栏。 Option-Command-C：拷贝样式：将所选项的格式设置拷贝到剪贴板。 Option-Command-V：粘贴样式：将拷贝的样式应用到所选项。 Option-Shift-Command-V：粘贴并匹配样式：将周围内容的样式应用到粘贴在该内容中的项目。 Option-Command-I：显示或隐藏检查器窗口。 Shift-Command-P：页面设置：显示用于选择文稿设置的窗口。 Shift-Command-S：显示“存储为”对话框或复制当前文稿。 Shift-Command-减号 (-)：缩小所选项。 Shift-Command-加号 (+)：放大所选项。Command–等号 (=) 可实现相同的功能。 Shift-Command–问号 (?)：打开“帮助”菜单。 1.6. Mac 的启动组合键 了解可通过在启动时按住一个或多个按键来访问的 Mac 功能和工具。 要使用这些组合键中的任何一个，请在按下电源按钮以开启 Mac 后或在 Mac 开始重新启动后，立即按住相应按键。请一直按住，直至电脑出现对应的行为。 Command (⌘)-R：从内建的 macOS 恢复系统启动。或者，您也可以使用 Option-Command-R 或 Shift-Option-Command-R 以通过互联网从 macOS 恢复功能启动。macOS 恢复功能可以安装不同版本的 macOS，具体取决于您在电脑启动时使用的组合键。如果您的 Mac 使用了固件密码，系统将提示您输入这个密码。 Option (⌥) 或 Alt：启动进入“启动管理器”，您可以从中选取其他可用的启动磁盘或宗卷。如果您的 Mac 使用了固件密码，系统将提示您输入这个密码。 Option-Command-P-R：重置 NVRAM 或 PRAM。如果您的 Mac 使用了固件密码，电脑会忽略这个组合键或从 macOS 恢复功能启动。 Shift (⇧)：以安全模式启动。如果使用了固件密码，这个组合键将被停用。 D：启动进入“Apple 诊断”实用工具。或者，您也可以使用 Option-D 通过互联网启动进入这个实用工具。如果使用了固件密码，这个组合键将被停用。 N：从 NetBoot 服务器启动，前提是您的 Mac 支持网络启动宗卷。要使用服务器上默认的引导映像，请按住 Option-N。如果使用了固件密码，这个组合键将被停用。 Command-S：以单用户模式启动。如果运行的是 macOS Mojave 或更高版本，或者使用了固件密码，这个组合键将被停用。 T：以目标磁盘模式启动。如果使用了固件密码，这个组合键将被停用。 Command-V：以详细模式启动。如果使用了固件密码，这个组合键将被停用。 推出键 (⏏)、F12、鼠标按钮或触控板按钮：推出可移动介质，例如光盘。如果使用了固件密码，这个组合键将被停用。 1.7. Mac 上的“聚焦”键盘快捷键 在 Mac 上使用键盘快捷键通过“聚焦”快速搜索。 操作 快捷键 打开“聚焦”以启动搜索 Command-空格键 使用建议的结果完成搜索 右箭头键 移到下一个搜索结果 下箭头键 移到上一个搜索结果 上箭头键 移到下一个类别中的第一个搜索结果 Command-下箭头 移到上一个类别中的第一个搜索结果 Command-上箭头 显示 Mac 上的搜索结果（如文件）路径 Command 放大图像预览 Control 键（然后在触控板上移动双指以在预览中移动图像） 打开所选结果 Return 键 在 App 或“访达”中查看文件 Command-R 或 Command-连按 打开搜索结果已选定的“访达”窗口 Option-Command-空格键 1.8. Mac 上 Safari 浏览器中的键盘快捷键和手势 除 Safari 浏览器菜单中显示的快捷键外，您还可以使用以下快捷键。 网页 操作 快捷键或手势 向上、向下、向左或向右滚动 按下箭头键。 大幅度滚动 按下箭头键时按住 Option 键。 向下滚动屏幕 Page Down 键空格键 向上滚动屏幕 Page Up 键Shift-空格键 滚动到页面左上角或左下角 Command–上箭头键或 Home 键Command–下箭头键或 End 键 高亮显示网页上的下一项 Tab 将高亮显示下一文本栏或弹出式菜单。如果在“系统偏好设置”的“键盘”面板的“快捷键”面板中选择了“所有控制”，Tab 还将高亮显示按钮和其他控制。按下 Option-Tab 会高亮显示按下 Tab 键所高亮显示的项目，以及所有其他可点按项目。若要交换 Tab 和 Option-Tab 的行为，请在 Safari 浏览器偏好设置的“高级”面板中打开“按下 Tab 键以高亮显示网页上的每一项”。 显示所有标签页 Shift-Command-\\ 在新标签页中打开页面 按住 Command 键点按链接按住 Command 键点按书签在智能搜索栏中键入后，按下 Command-Return。 在新标签页中打开页面，并使该标签页成为活跃标签页 按住 Shift-Command 点按链接按住 Shift-Command 点按书签在智能搜索栏中键入后，按下 Shift-Command-Return。 使下一标签页成为活跃标签页 Control-Tab 或 Shift-Command-] 使上一标签页成为活跃标签页 Control-Shift-Tab 或 Shift-Command -[ 选择前 9 个标签页中的一个 Command-1 到 Command-9 关闭全部标签页，只保留其中一个 按住 Option 键点按您要保持打开的标签页上的“关闭”按钮 重新打开上次关闭的标签页或窗口 Shift-Command-T 按名称查看最近访问页面的列表 按住“后退” 或“前进” 按钮，直到列表出现 按网址 (URL) 查看最近访问页面的列表 按下 Option 键，并按住“后退”或“前进”按钮，直到列表出现 前往主页 Command-Home 键 在智能搜索栏中键入时，恢复当前网页地址 Esc 键 关闭阅读器 Esc 键 退出全屏幕视图 Esc 键 下载链接文件 按住 Option 键点按文件的链接 打开下载的文件 连按下载列表中的文件 缩放网站内容 按下 Command-加号 (+) 或 Command-减号 (–) 缩放网站文本 选取“显示”>“使文本变大”或“显示”>“使文本变小”时，按下 Option 键。 阅读列表 操作 快捷键或手势 显示或隐藏阅读列表边栏 Control-Command-2 添加当前页面 Shift-Command-D 添加链接页面 按住 Shift 键点按页面的链接 移除页面 按住 Control 键点按边栏中的页面摘要，然后选取“移除项目”。您也可以在页面摘要上向左轻扫，然后点按“移除”。或者，一直向左轻扫直至页面摘要消失。 书签 操作 快捷键或手势 将书签添加到“个人收藏”栏 点按智能搜索栏以显示页面的完整地址及其图标，然后将图标拖移到“个人收藏”栏 打开“个人收藏”栏中某个文件夹内的所有书签 按住 Command 键点按“个人收藏”栏中的文件夹 在“个人收藏”栏上移动书签 左右拖移书签 从“个人收藏”栏移除书签 将书签拖移到个人收藏栏外 书签边栏和书签视图 操作 快捷键或手势 显示或隐藏书签边栏 Control-Command-1 选择边栏中的书签和文件夹 按住 Command 键点按每个书签和文件夹按住 Shift 键点按以扩展选择 选择下一个书签或文件夹 上箭头键或下箭头键 打开所选书签 空格键 打开所选文件夹 空格键或右箭头键 关闭所选文件夹 空格键或左箭头键 更改书签的名称或地址 选择书签，然后按下 Return 键您还可以用力点按书签 取消编辑边栏中的书签名称 Esc 键 完成编辑书签名称 Return 键 创建包含书签视图中的所选书签和文件夹的文件夹 按下 Option 键点按右上角附近的“新建文件夹”按钮 删除书签 按住 Control 键点按书签，然后选取“删除” "},"Mac/Mac开源软件.html":{"url":"Mac/Mac开源软件.html","title":"Mac开源软件","summary":"Xcode使用总结","keywords":"","body":"1. Boop 编程开发辅助神器（Swift）2. Hidden Bar 菜单栏图标隐藏工具（Swift）3. Dozer 隐藏Mac菜单栏图标（Swift）4. Mos 鼠标平滑滚动反转（Swift）5. IINA 视频播放器（Swift）6. FSNotes 程序员笔记应用（Swift）7. AltTab 窗口快速切换利器（Swift）8. Rectangle 开源Mac窗口管理应用（Swift）9. uPic Mac图床客户端（Swift）10. OpenInTerminal 在当前目录打开终端（Swift）11. MonitorControl 菜单栏显示器音量亮度调节（Swift）12. NetNewsWire RSS新闻订阅客户端（Swift）13. Karabiner-Elements 键盘键位修改神器（Swift）14. CotEditor 开源免费的文本编辑器（Swift）15. Thor 通过快捷键快速打开应用（Swift）16. LyricsX 菜单栏及桌面歌词显示（Swift）17. Pock 在TouchBar中显示Dock栏图标（Swift）18. Stats 菜单栏系统监视器（Swift）19. Gifski 从视频中提取gif动图（Swift）20. Retroactive 解锁MacOS软件系统限制（Swift）21. PicGo 跨平台图床软件22. Stretchly 休息提醒工具23. Terminus 支持SSH的mac终端模拟器24. Electerm 终端模拟器/ssh/sftp客户端25. 洛雪音乐 全网音乐播放下载工具26. KeeWeb 跨平台密码管理器27. Buttercup 跨平台密码管理器28. Listen 付费VIP音乐免费听29. Mark Text Markdown编辑器30. Motrix 全能的下载工具31. NTFSTool NTFS硬盘读写工具32. SwitchHosts! mac hosts修改工具33. magnetW 磁力聚合搜索工具34. draw.io 流程图绘制应用1. Boop 编程开发辅助神器（Swift） Boop 是一款编程开发辅助应用。通过 command + b 键即可快速帮助您进行 JSON 解析、URL编码解码、Base64解码编码、计算MD5哈希值、JWT解码、XML格式化、JSON转CSV、css格式化、Javascript压缩格式化、SQL格式化等等功能。需要注意的是通过 command + b 键调用出功能列表后，要使用上下箭头选择，回车键确认。 项目地址：https://github.com/IvanMathy/Boop 2. Hidden Bar 菜单栏图标隐藏工具（Swift） Hidden Bar 是一款 macOS 菜单栏图标隐藏工具。使用方法：按住 ⌘ Command 键，拖动想要折叠的图标移到「｜」图标左侧就可以了，点击「>」箭头图标就可以直接隐藏菜单栏图标。不过要注意一个逻辑问题，「>」图标不能放置在「｜」图标左侧。 项目地址：https://github.com/dwarvesf/hidden 3. Dozer 隐藏Mac菜单栏图标（Swift） Dozer 是一款隐藏macOS菜单栏图标的应用，不同于 Bartender 和 Vanilla，Dozer 是免费、开源的。Dozer 操作方法也很简单，Dozer运行后在菜单栏会出现一个「‧」，点击它，然后会出现另外一个「‧」，按住 command 键拖曳「‧」调整到适当位置，然后点击一下「‧」就会隐藏第一个「‧」左边的图标，重新显示也只需要点击「‧」即可。 项目地址：https://github.com/Mortennn/Dozer 4. Mos 鼠标平滑滚动反转（Swift） Mos 是mac上一款针对非原装鼠标不能平滑滚动的鼠标平滑滚动工具，Mos最主要的功能就是让你的鼠标滚动效果达到和妙控鼠标（Magic Mouse）/ 妙控板（Magic Trackpad）一样的如丝般顺滑的滚动体验。对于没有买妙控鼠标（Magic Mouse）的人来说这是一款神器。 项目地址：https://github.com/Caldis/Mos 5. IINA 视频播放器（Swift） IINA 是一款采用现代设计和流线型功能的在线mac视频播放器，可以观看视频，管理播放列表，处理媒体内容或为电影加载字幕提等等。IINA mac可以加载本地文件或提供视频URL，IINA mac可以使用所有流行的媒体格式。而且您可以快速更改界面主题，调整默认行为和用户界面，决定是否要自动加载字幕，配置新的键绑定等。 项目地址：https://github.com/iina/iina 6. FSNotes 程序员笔记应用（Swift） FSNotes 是一款本地的Mac笔记应用，支持markdown、rtf、txt格式，它将数据存储在本地文件系统中而非云端，安全，稳定。 项目地址：https://github.com/glushchenko/fsnotes 7. AltTab 窗口快速切换利器（Swift） AltTab 是一款适用于 macOS 的窗口切换工具，将 Windows 的 alt-tab 窗口切换功能带到了 macOS 中。用法： 按下 ⌥ option + ⇥ tab 显示窗口缩略图。 继续按 ⌥ option + ⇥ tab 选择下一个窗口。 按住 ⌥ option + ⇧ shift + ⇥ tab 选择上一个缩略图。 松开 ⌥ option 以将焦点切换到窗口。 项目地址：https://github.com/lwouis/alt-tab-macos 8. Rectangle 开源Mac窗口管理应用（Swift） Rectangle 是一款开源免费的 Mac 窗口管理工具。Rectangle 可以让用户使用键盘快捷键来移动和调整窗口大小。 项目地址：https://github.com/rxhanson/Rectangle 9. uPic Mac图床客户端（Swift） uPic 是一款 Mac图床(文件)上传客户端，它可以将图片、各种文件上传到配置好的指定对象存储中，然后即时生成可供互联网访问的文件URL。支持图床： smms、 又拍云 USS、七牛云 KODO、 阿里云 OSS、 腾讯云 COS、微博、Github、 Gitee、 Amazon S3、自定义上传接口。无论是本地文件、或者屏幕截图都可自动上传，菜单栏显示实时上传进度。上传完成后文件链接自动复制到剪切板，返回的URL链接格式可以选择：普通 URL、HTML 或者 Markdown，非常灵活，推荐使用，比iPic强大！ 项目地址：https://github.com/gee1k/uPic 10. OpenInTerminal 在当前目录打开终端（Swift） OpenInTerminal 是一款开发辅助工具，可以在当前位置打开终端。主要功能：在终端（或编辑器）中打开当前目录以及在终端（或编辑器）中打开选择的文件夹或文件。 支持的终端： iTerm, Hyper 和 Alacritty 支持的文本编辑：Visual Studio Code, VSCode Insiders, Atom, Sublime Text, VSCodium, BBEdit，TextMate，CotEditor，MacVim 和 JetBrains(AppCode, CLion, GoLand, IntelliJ IDEA, PhpStorm, PyCharm, RubyMine, WebStorm) 设置为打开新的窗口或者标签页 将已选择的文件或者访达窗口的路径拷贝到粘贴板 支持键盘快捷键 支持 Dark Mode 项目地址：https://github.com/Ji4n1ng/OpenInTerminal 11. MonitorControl 菜单栏显示器音量亮度调节（Swift） MonitorControl 是一款 macOS 菜单栏多显款器音量及亮度调节应用。相信很多 Mac 用户都是一台 MacBook 加一台外接显示器，但是你会发现 macOS 不能用键盘直接调节外接显款器的亮度和输出的音量。MonitorControl 的出现就是为了解决这个问题的，MonitorControl 不仅可以对外接屏的音量、亮度调节，还可以对外接屏的对比度进行调节，并可以自定义选择快捷键控制的类型，或是指定在某个屏幕启用这些功能，甚至连 ⇧Shift+⌥Option 这种微调音量控制都能支持。 项目地址：https://github.com/MonitorControl/MonitorControl 12. NetNewsWire RSS新闻订阅客户端（Swift） NetNewsWire 是一款开源免费的 RSS订阅器，支持Safari扩展程序，可轻松添加Feed订阅，支持通过Feedbin同步，共享到邮件，MarsEdit，Micro.blog，便笺，消息等，支持AppleScript。 开源项目：https://github.com/Ranchero-Software/NetNewsWire 13. Karabiner-Elements 键盘键位修改神器（Swift） karabiner-elements 一款开源的 macOS 键盘修改神器。可以将键盘上的某个键位映射为任意指定的其他键位。可以仅特定/同时对连接到 Mac 的键盘设备生效。支持虚拟键盘（ANSI, ISO, JIS）等。支持设置多套偏好设置，可根据场景切换使用 项目地址：https://github.com/pqrs-org/Karabiner-Elements 14. CotEditor 开源免费的文本编辑器（Swift） CotEditor 是一款针对 macOS 开发的轻量级代码编辑器。CotEditor 启动非常快，支持 50 多种语言高亮，例如HTML、PHP、Python、Ruby、Markdown、Javascript等等。 项目地址：https://github.com/coteditor/CotEditor 15. Thor 通过快捷键快速打开应用（Swift） Thor 是一款 Mac 效率类应用，可以针对指定的应用设计设置快捷键，通过指定的快捷键快速打开应用和切换应用。 项目地址：https://github.com/gbammc/Thor 16. LyricsX 菜单栏及桌面歌词显示（Swift） LyricsX 是一款 Mac 桌面歌词及菜单栏歌词显示应用。可从网络自动搜索和下载当前播放歌曲的歌词并将其显示在桌面和菜单栏中，您可以自定义字体，颜色和位置，在状态菜单上调整歌词偏移，另外可以拖放导入歌词以及导出歌词文件。支持 iTunes、Spotify、Vox、Audirvana、Swinsian 等音乐播放器。歌词来源：网易云音乐、QQ音乐、酷狗音乐、虾米音乐、天天动听、歌词迷。 项目地址：https://github.com/ddddxxx/LyricsX 17. Pock 在TouchBar中显示Dock栏图标（Swift） Pock 是一款可以将macOS Dock栏图标映射到触摸栏中显示工具。程序还附带了一些简约的小部件，比如时间，Wifi，电量、亮度控制、声音控制、正在播放等。 项目地址：https://github.com/pigigaldi/Pock 18. Stats 菜单栏系统监视器（Swift） Stats 是一款macOS菜单栏系统监视工具。可以帮助您实时监视：CPU利用率、GPU利用率、内存使用情况、磁盘利用率、传感器信息（温度/电压/功率）、电池电量、网络使用等信息。 项目地址：https://github.com/exelban/stats 19. Gifski 从视频中提取gif动图（Swift） Gifski for Mac 是一款可以将视频转换为GIF动画的应用。Gifski 支持 macOS 支持的所有视频格式（.mp4/.movH264/HEVC/ProRes 等等）。使用方法简单：只需将视频拖放到主界面，然后裁切需要时长的视频，设置尺寸（可以自定义宽度和高度）、FPS、质量，点击转换即可。 项目地址：https://github.com/sindresorhus/Gifski 20. Retroactive 解锁MacOS软件系统限制（Swift） Retroactive (解印) 可让您在 macOS Catalina (10.15.x) 上运行iTunes，iPhoto和Aperture。还可以在 macOS Mojave (10.14.x) 解封 Xcode 11.4.1。 macOS Mojave 或macOS High Sierra 上解锁 Final Cut Pro 7，Logic Pro 9 或者修复 iWork '09。 项目地址：https://github.com/cormiertyshawn895/Retroactive 21. PicGo 跨平台图床软件 PicGo 是一款强大的mac图床工具，默认支持微博图床、七牛图床、腾讯云COS、又拍云、GitHub、SM.MS、阿里云OSS、Imgur，方便不同图床的上传需求。支持5种默认剪贴板链接格式：Markdown/html/url/ubb/自定义链接格式，让你的文本编辑游刃有余。2.0版本开始支持插件系统 项目地址：https://github.com/Molunerfinn/PicGo 22. Stretchly 休息提醒工具 Stretchly 是一款免费开源的 Mac 休息提醒工具。默认情况下，每10分钟有20秒的小憩，每30分钟有5分钟的长休息（在2个小憩之后）。您可以设置小憩与休息间隔、提醒声音、界面主题样式以及提醒模式，并提供可选的不可跳过休息模式。 项目地址：https://github.com/hovancik/stretchly 23. Terminus 支持SSH的mac终端模拟器 Terminus 是一个高度可配置的终端模拟器，适用于Windows，macOS和Linux。 主题和配色方案，完全可配置的快捷键，仿chrome标签页，保存最近打开的标签，集成的SSH客户端和连接管理器，完整的Unicode支持，包括双宽字符 项目地址：https://github.com/Eugeny/terminus 24. Electerm 终端模拟器/ssh/sftp客户端 Electerm 是一款集终端模拟器、文件管理器、ssh远程连接、sftp客户端为一体的工具（类似于xshell），允许双击直接编辑远程文件（小文件），使用内置编辑器编辑本地文件，使用publickey +密码验证，Zmodem（rz，sz），还有自定义终端样式，全局/会话代理，将书签/主题/快速命令同步到github secret gist等功能。 项目地址：https://github.com/electerm/electerm 25. 洛雪音乐 全网音乐播放下载工具 洛雪音乐 for mac是一款全网免vip无损音乐歌曲下载工具，LuoXue Music支持免vip下载歌典的平台：QQ音乐无损音乐下载、酷狗音乐无损音乐下载、酷我音乐无损音乐下载、百度音乐无损音乐下载、网易云音乐无损歌典下载。lx music，你值得拥有！ 项目地址：https://github.com/lyswhut/lx-music-desktop 26. KeeWeb 跨平台密码管理器 KeeWeb for Mac是一款非常赞的密码管理器，KeeWeb与KeePass兼容的而且是跨平台的。KeeWeb在您浏览网站或者使用需要输入密码的应用中可以帮您自动填写已存储的密码。拥有密码生成器，支持密码生成规则，可以帮您生成最安全的密码！ 项目地址：https://github.com/keeweb/keeweb 27. Buttercup 跨平台密码管理器 Buttercup for Mac 是一款精美简单的密码管理器，旨在帮助您管理凭据。Buttercup使用非常强大的加密功能，以一个主密码保护您的敏感信息-随时为每个服务使用更强大，更复杂的密码，并让Buttercup安全地存储它们，支持自定义字段功能！Buttercup将跨平台提升到了新的高度，支持Windows、macOS、Linux、iOS、Android和浏览器插件 项目地址：https://github.com/buttercup 28. Listen 付费VIP音乐免费听 Listen 1 是一款 Mac 全网音乐播放器。可以搜索和播放来自网易云音乐，虾米音乐，酷狗音乐，酷我音乐，哔哩哔哩，咪咕音乐，QQ音乐七个主流音乐网站平台的付费VIP歌曲，让你的曲库更全面。并支持收藏功能，方便的创建自己的歌单。 项目地址：https://github.com/listen1/listen1_desktop 29. Mark Text Markdown编辑器 Mark Text for mac是一款所输即所见的markdown编辑器，摒弃了众多 Markdown 编辑器左边写作右边预览的写作方式，巧妙的将编辑和预览融为一体。极速渲染编辑页面，带来流畅的书写体验。生成的 Markdown 可以复制到任何支持 Markdown 格式的社区、网站。可以导出 HTML 和 PDF 格式文件。支持六种皮肤风格，支持多种编辑模式：源代码模式、打字机模式、专注模式。 项目地址：https://github.com/marktext/marktext 30. Motrix 全能的下载工具 Motrix for mac版是一款全能的下载工具。支持 HTTP下载、FTP下载、BT下载下载、磁力链下载、百度网盘资源下载。Motrix 也是采用了「Aria 2」作为核心，所以下载速度、多线程等能力与其他下载工具几乎一致。 项目地址：https://github.com/agalwood/Motrix 31. NTFSTool NTFS硬盘读写工具 NTFS Tool For Mac 是一款为 macOS 提供 NTFS 读写支持的软件。 支持NTFS磁盘读写、挂载、推出、管理等功能。它的界面简洁易用，希望这款工具能够为你的工作和生活带来便利。NTFS Tool 是一款纯净版的NTFS硬盘读写工具。 项目地址：https://github.com/ntfstool/ntfstool 32. SwitchHosts! mac hosts修改工具 SwitchHosts! 是一个管理切换编辑Mac系统hosts的工具。支持编辑mac hosts文件，自定义以及添加多个hosts文件配置，备份hosts文件。 项目地址：https://github.com/oldj/SwitchHosts 33. magnetW 磁力聚合搜索工具 magnetW 是一款开源的Mac磁力链接聚合搜索工具。磁力搜 For magnetW通过关键字词搜索时实反馈搜索结果，包含大小，时间，来源，避免下载葫芦娃。可以配合 webtorrent 进行在线播放（webtorrent加载资源得等待几分钟），可以配合Folx、迅雷不限速进行下载。 项目地址：https://github.com/xiandanin/magnetW 34. draw.io 流程图绘制应用 draw.io for Mac 是一款免费的跨平台绘图工具。可以创建流程图、组织架构图、UML、ER图、泳道图、网络拓朴图、思维导图等等。内置丰富的模板和控件库供挑选使用，还可以导入组件。支持Google Dirve，One Drive， Dropbox和本地存储，支持将流程图导出为多种格式，比如 pdf/svg/html 等，提供 Chrome 插件。 项目地址：https://github.com/jgraph/drawio-desktop "},"Mac/zsh.html":{"url":"Mac/zsh.html","title":"Mac zsh","summary":"Mac终端zsh常用命令","keywords":"","body":"1.1. cd 切换到目录1.2. ls 查看文件与目录1.3. cp 复制文件1.4. mv 移动文件或目录、更名1.5. rm 删除文件或目录1.6. 示例1.7. grep 分析一行的信息1.8. cat1.9. chmod 更改文件权限1.10. chown 更改文件所有者1.11. chgrp1.12. vim2. FAQ2.1. oh-my-zsh git 慢/卡顿问题解决1.1. cd 切换到目录 示例 cd /root/Docements # 切换到目录/root/Docements cd ./path # 切换到当前目录下的path目录中，一个点“.”表示当前目录 cd ../path # 切换到上层目录中的path目录中，两个点“..”表示上一层目录 1.2. ls 查看文件与目录 参数 -l : 列出长数据串，包含文件的属性与权限数据等 -a : 列出全部文件，连同隐藏文件(开头为.的文件)一起列出来(常用) -d : 仅列出目录本身，而不是列出目录的文件数据 -h : 将文件容量以较易读的方式(GB，kb等)列出来 -R : 连同子目录的内容一起列出(递归列出),等于该目录下所有的文件都会显示出来 注意 : 这些参数可以组合使用 1.3. cp 复制文件 参数 -a ：将文件的特性一起复制 -p ：连同文件的属性一起复制，而非使用默认方式，与-a相似，常用于备份 -i ：若目标文件已经存在时，在覆盖时会先询问操作的进行 -r ：递归持续复制，用于目录的复制行为 -u ：目标文件与源文件有差异时才会复制 1.4. mv 移动文件或目录、更名 参数 -f ：force强制的意思，如果目标文件已经存在，不会询问而直接覆盖 -i ：若目标文件已经存在，就会询问是否覆盖 -u ：若目标文件已经存在，且比目标文件新，才会更新 示例 mv file1 file2 file3 dir # 把文件file1、file2、file3移动到目录dir中 mv file1 file2 # 把文件file1重命名为file2 1.5. rm 删除文件或目录 参数 -f ：就是force的意思，忽略不存在的文件，不会出现警告消息 -i ：互动模式，在删除前会询问用户是否操作 -r ：递归删除，最常用于目录删除，它是一个非常危险的参数 1.6. 示例 rm -i file # 删除文件file，在删除之前会询问是否进行该操作 rm -fr dir # 强制删除目录dir中的所有文件 1.7. grep 分析一行的信息 参数 -a ：将binary文件以text文件的方式查找数据 -c ：计算找到‘查找字符串’的次数 -i ：忽略大小写的区别，即把大小写视为相同 -v ：反向选择，即显示出没有‘查找字符串’内容的那一行 file 1.8. cat 1.9. chmod 更改文件权限 1.10. chown 更改文件所有者 1.11. chgrp 1.12. vim 2. FAQ 2.1. oh-my-zsh git 慢/卡顿问题解决 git config --add oh-my-zsh.hide-dirty 1 git config --add oh-my-zsh.hide-status 1 "}}